CREATE OR REPLACE PACKAGE WORKFLOW_TRACKING_PKG AS
	
	-- TODO Strongly-typed ref cursors
	TYPE RefCursor IS REF CURSOR;

	c_DELETED_VERSION CONSTANT CHAR(2) := '-1';

	/*
	 * Remove a tracking profile for a workflow instance.
	 */
	PROCEDURE DeleteTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
	);

	/*
	 * Remove a tracking profile for a workflow type.
	 */	
	PROCEDURE DeleteTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME TYPE.ASSEMBLY_FULL_NAME%TYPE
	);
	
	/*
	 * Retrieve the current default tracking profile.
	 */
	PROCEDURE GetDefaultTrackingProfile
	(
		p_TRACKING_PROFILE_XML OUT RefCursor
	);

	/*
	 * Retrieve a particular version of the default tracking profile.
	 */	
	PROCEDURE GetDefaultTrackingProfile
	(
		p_VERSION IN DEFAULT_TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	);

	/*
	 * Retrieve the tracking profile for a workflow instance.
	 */
	PROCEDURE GetTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	);

	/*
	 * Retrieve a particular version of the tracking profile for a workflow type.
	 */	
	PROCEDURE GetTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_VERSION IN TRACKING_PROFILE.VERSION%TYPE := NULL
		,p_CREATE_DEFAULT IN NUMBER
		,p_TRACKING_PROFILE_XML OUT RefCursor
	);
	
	/*
	 * Retrieve all changed tracking profiles since a specific date/time.
	 */	
	PROCEDURE GetTrackingProfileChanges
	(
		p_LAST_CHECK IN TRACKING_PROFILE.INSERT_DATE_TIME%TYPE
		,p_NEXT_CHECK OUT TRACKING_PROFILE.INSERT_DATE_TIME%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	);
	
	/*
	 * Create a new version of the default tracking profile.
	 */	
	PROCEDURE UpdateDefaultTrackingProfile
	(
		p_VERSION IN DEFAULT_TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML IN DEFAULT_TRACKING_PROFILE.TRACKING_PROFILE_XML%TYPE
	);

	/*
	 * Create a tracking profile for a particular workflow instance.
	 */
	PROCEDURE UpdateTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
		,p_TRACKING_PROFILE_XML IN TRACKING_PROFILE_INSTANCE.TRACKING_PROFILE_XML%TYPE
	);

	/*
	 * Create a new version of the tracking profile for a particular workflow type
	 */
	PROCEDURE UpdateTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_VERSION IN TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML IN TRACKING_PROFILE.TRACKING_PROFILE_XML%TYPE
	);
	
	/*
	 * Insert a workflow type record.
	 */
	PROCEDURE InsertWorkflow
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_IS_INSTANCE_TYPE IN TYPE.IS_INSTANCE_TYPE%TYPE
		,p_WORKFLOW_DEFINITION IN WORKFLOW.WORKFLOW_DEFINITION%TYPE
		,p_WORKFLOW_TYPE_ID OUT WORKFLOW.WORKFLOW_TYPE_ID%TYPE
		,p_EXISTS OUT NUMBER
	);
	
	/*
	 * Insert the activities associated with a workflow.
	 */
	PROCEDURE InsertActivities
	(
		p_WORKFLOW_TYPE_ID IN ACTIVITY.WORKFLOW_TYPE_ID%TYPE
		,p_ACTIVITY_XML IN NCLOB
	);

	/*
	 * Insert a workflow instance record.
	 */	
	PROCEDURE InsertWorkflowInstance
	(
		p_INSTANCE_ID IN WORKFLOW_INSTANCE.INSTANCE_ID%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_CONTEXT_GUID IN WORKFLOW_INSTANCE.CONTEXT_GUID%TYPE
		,p_CALLER_INSTANCE_ID IN WORKFLOW_INSTANCE.CALLER_INSTANCE_ID%TYPE := NULL
		,p_CALL_PATH IN WORKFLOW_INSTANCE.CALL_PATH%TYPE := NULL
		,p_CALLER_CONTEXT_GUID IN WORKFLOW_INSTANCE.CALLER_CONTEXT_GUID%TYPE := NULL
		,p_CALLER_PARENT_CONTEXT_GUID IN WORKFLOW_INSTANCE.CALLER_PARENT_CONTEXT_GUID%TYPE := NULL
		,p_INITIALISED_DATE_TIME IN WORKFLOW_INSTANCE.INITIALISED_DATE_TIME%TYPE
		,p_WORKFLOW_INSTANCE_ID OUT RefCursor
	);
	
	/*
	 * Insert a batch of activity tracking records.
	 */	
	PROCEDURE InsertActivityTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_1 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_STATUS_ID_1 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_1 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE
		,p_ACTIVITY_STATUS_EVENT_ID_1 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_2 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_2 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_2 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_2 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_2 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_2 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_3 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_3 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_3 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_3 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_3 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_3 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_4 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_4 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_4 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_4 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_4 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_4 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_5 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_5 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_5 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_5 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_5 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_5 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a single activity tracking record.
	 */	
	PROCEDURE InsertActivityTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_STATUS_ID IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE
		,p_ACTIVITY_STATUS_EVENT_ID OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a batch of user tracking records.
	 */	
	PROCEDURE InsertUserTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_1 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_EVENT_DATE_TIME_1 IN USER_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN USER_EVENT.EVENT_ORDER%TYPE
		,p_USER_DATA_KEY_1 IN USER_EVENT.USER_DATA_KEY%TYPE
		,p_USER_DATA_TYPE_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_USER_DATA_ASSEMBLY_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_USER_DATA_STR_1 IN USER_EVENT.USER_DATA_STR%TYPE
		,p_USER_DATA_BLOB_1 IN USER_EVENT.USER_DATA_BLOB%TYPE
		,p_USER_DATA_NON_SERIALISABLE_1 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE
		,p_USER_EVENT_ID_1 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_2 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_2 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_2 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_2 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_2 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_2 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_2 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_2 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_2 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_3 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_3 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_3 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_3 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_3 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_3 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_3 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_3 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_3 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_4 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_4 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_4 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_4 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_4 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_4 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_4 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_4 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_4 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_5 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_5 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_5 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_5 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_5 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_5 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_5 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_5 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_5 OUT USER_EVENT.USER_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a single user tracking records.
	 */	
	PROCEDURE InsertUserTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_EVENT_DATE_TIME IN USER_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN USER_EVENT.EVENT_ORDER%TYPE
		,p_USER_DATA_KEY IN USER_EVENT.USER_DATA_KEY%TYPE
		,p_USER_DATA_TYPE_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_USER_DATA_ASSEMBLY_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_USER_DATA_STR IN USER_EVENT.USER_DATA_STR%TYPE
		,p_USER_DATA_BLOB IN USER_EVENT.USER_DATA_BLOB%TYPE
		,p_USER_DATA_NON_SERIALISABLE IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE
		,p_USER_EVENT_ID OUT USER_EVENT.USER_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a batch of workflow tracking records.
	 */	
	PROCEDURE InsertWorkflowTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_1 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_2 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_3 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_4 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_5 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a single workflow tracking record.
	 */	
	PROCEDURE InsertWorkflowTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
	);
	
	/*
	 * Insert a batch of activity added actions.
	 */	
	PROCEDURE InsertActivityAddedActions
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME_1 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_ADDED_ACTIVITY_ACTION_1 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE
		,p_ORDER_1 IN ADDED_ACTIVITY."ORDER"%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_2 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_2 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_2 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_2 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_3 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_3 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_3 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_3 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_4 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_4 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_4 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_4 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_5 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_5 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_5 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_5 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
	);
	
	/*
	 * Insert a single activity added action.
	 */	
	PROCEDURE InsertActivityAddedAction
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_ADDED_ACTIVITY_ACTION IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE
		,p_ORDER IN ADDED_ACTIVITY."ORDER"%TYPE
	);

	/*
	 * Insert a batch of activity removed actions.
	 */	
	PROCEDURE InsertActivityRemovedActions
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME_1 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME_1 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_REMOVED_ACTIVITY_ACTION_1 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE
		,p_ORDER_1 IN REMOVED_ACTIVITY."ORDER"%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_2 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_2 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_2 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_2 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_3 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_3 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_3 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_3 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_4 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_4 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_4 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_4 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_5 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_5 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_5 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_5 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
	);
	
	/*
	 * Insert a single activity removed action.
	 */	
	PROCEDURE InsertActivityRemovedAction
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_REMOVED_ACTIVITY_ACTION IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE
		,p_ORDER IN REMOVED_ACTIVITY."ORDER"%TYPE
	);

	/*
	 * Insert a batch of event annotations.
	 */	
	PROCEDURE InsertEventAnnotations
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_TYPE IN EVENT_ANNOTATION.EVENT_TYPE%TYPE
		,p_EVENT_ID_1 IN EVENT_ANNOTATION.EVENT_ID%TYPE
		,p_ANNOTATION_1 IN EVENT_ANNOTATION.ANNOTATION%TYPE		
		,p_EVENT_ID_2 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_2 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_3 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_3 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_4 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_4 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_5 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_5 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
	);
	
	/*
	 * Insert a single event annotation.
	 */	
	PROCEDURE InsertEventAnnotation
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_ID IN EVENT_ANNOTATION.EVENT_ID%TYPE
		,p_EVENT_TYPE IN EVENT_ANNOTATION.EVENT_TYPE%TYPE
		,p_ANNOTATION IN EVENT_ANNOTATION.ANNOTATION%TYPE
	);

	/*
	 * Insert a batch of tracking data items.
	 */	
	PROCEDURE InsertTrackingDataItems
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_TYPE IN TRACKING_DATA_ITEM.EVENT_TYPE%TYPE
		,p_EVENT_ID_1 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE
		,p_FIELD_NAME_1 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_DATA_STR_1 IN TRACKING_DATA_ITEM.DATA_STR%TYPE
		,p_DATA_BLOB_1 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE
		,p_DATA_NON_SERIALISABLE_1 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE
		,p_TRACKING_DATA_ITEM_ID_1 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_2 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_2 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_2 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_2 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_2 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_2 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_3 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_3 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_3 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_3 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_3 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_3 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_4 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_4 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_4 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_4 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_4 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_4 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_5 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_5 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_5 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_5 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_5 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_5 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
	);

	/*
	 * Insert a single tracking data item.
	 */
	PROCEDURE InsertTrackingDataItem
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_ID IN TRACKING_DATA_ITEM.EVENT_ID%TYPE
		,p_EVENT_TYPE IN TRACKING_DATA_ITEM.EVENT_TYPE%TYPE
		,p_FIELD_NAME IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_DATA_STR IN TRACKING_DATA_ITEM.DATA_STR%TYPE
		,p_DATA_BLOB IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE
		,p_DATA_NON_SERIALISABLE IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE
		,p_TRACKING_DATA_ITEM_ID OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
	);

	/*
	 * Insert a batch of tracking data item annotations
	 */
	PROCEDURE InsertTrackingDataAnnotations
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_TRACKING_DATA_ITEM_ID_1 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE
		,p_ANNOTATION_1 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE
		,p_TRACKING_DATA_ITEM_ID_2 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_2 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_3 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_3 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_4 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_4 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_5 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_5 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
	);
	
	/*
	 * Insert a single tracking data item annotation.
	 */
	PROCEDURE InsertTrackingDataAnnotation
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_TRACKING_DATA_ITEM_ID IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE
		,p_ANNOTATION IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE
	);
	
	/*
	 * Retrieve the unique identifier of a type, creating a new one
	 * if necessary.
	 */	
	PROCEDURE GetTypeId
	(
		p_TYPE_ID OUT TYPE.TYPE_ID%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_IS_INSTANCE_TYPE IN TYPE.IS_INSTANCE_TYPE%TYPE := 0
	);

	/*
	 * Retrieve the unique identifier of an activity instance, creating a new one
	 * if necessary.
	 */
	PROCEDURE GetActivityInstanceId
	(
		p_WORKFLOW_INSTANCE_ID IN ACTIVITY_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_INSTANCE_ID OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
	);
	
END WORKFLOW_TRACKING_PKG;
/

CREATE OR REPLACE PACKAGE BODY WORKFLOW_TRACKING_PKG AS

	/*
	 * Remove a tracking profile for a workflow instance.
	 */
	PROCEDURE DeleteTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
	)
	AS
	BEGIN
		UPDATE TRACKING_PROFILE_INSTANCE
		SET
			TRACKING_PROFILE_XML = NULL
			,UPDATED_DATE_TIME = SYS_EXTRACT_UTC(SYSTIMESTAMP)
		WHERE
			INSTANCE_ID = p_INSTANCE_ID;

		IF NVL(SQL%ROWCOUNT, 0) = 0	THEN
			-- no rows updated, perform an insert instead
			INSERT INTO TRACKING_PROFILE_INSTANCE
			(
				INSTANCE_ID
				,TRACKING_PROFILE_XML
			)
			VALUES
			(
				p_INSTANCE_ID
				,NULL
			);
		END IF;
				
	END DeleteTrackingProfile;
	
	/*
	 * Remove a tracking profile for a workflow type.
	 */	
	PROCEDURE DeleteTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME TYPE.ASSEMBLY_FULL_NAME%TYPE
	)
	AS
		l_TYPE_ID NUMBER(18);
	BEGIN
		GetTypeId(l_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
	
		INSERT INTO TRACKING_PROFILE
		(
			VERSION
			,WORKFLOW_TYPE_ID
			,TRACKING_PROFILE_XML
		)
		VALUES
		(
			c_DELETED_VERSION
			,l_TYPE_ID
			,NULL
		);
		
	END DeleteTrackingProfile;
	
	/*
	 * Retrieve the current default tracking profile.
	 */
	PROCEDURE GetDefaultTrackingProfile
	(
		p_TRACKING_PROFILE_XML OUT RefCursor
	)
	AS
	BEGIN
		OPEN p_TRACKING_PROFILE_XML FOR
			SELECT
				*
			FROM (
				SELECT
					VERSION
					,TRACKING_PROFILE_XML
				FROM
					DEFAULT_TRACKING_PROFILE
				ORDER BY
					INSERT_DATE_TIME DESC
			)
			WHERE
				ROWNUM = 1;
				
	END GetDefaultTrackingProfile;
	
	/*
	 * Retrieve a particular version of the default tracking profile.
	 */	
	PROCEDURE GetDefaultTrackingProfile
	(
		p_VERSION IN DEFAULT_TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	)
	AS
	BEGIN
		OPEN p_TRACKING_PROFILE_XML FOR
			SELECT
				TRACKING_PROFILE_XML
			FROM
				DEFAULT_TRACKING_PROFILE
			WHERE
				VERSION = p_VERSION;
				
	END GetDefaultTrackingProfile;
	
	/*
	 * Retrieve the tracking profile for a workflow instance.
	 */
	PROCEDURE GetTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	)
	AS
	BEGIN
		OPEN p_TRACKING_PROFILE_XML FOR
			SELECT
				TRACKING_PROFILE_XML
			FROM
				TRACKING_PROFILE_INSTANCE
			WHERE
				INSTANCE_ID = p_INSTANCE_ID;
				
	END GetTrackingProfile;
	
	/*
	 * Retrieve a particular version of the tracking profile for a workflow type.
	 */	
	PROCEDURE GetTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_VERSION IN TRACKING_PROFILE.VERSION%TYPE := NULL
		,p_CREATE_DEFAULT IN NUMBER
		,p_TRACKING_PROFILE_XML OUT RefCursor
	)
	AS
		l_EXISTS NUMBER;
		l_TYPE_ID NUMBER(18);
	BEGIN

		IF p_CREATE_DEFAULT = 1	THEN
			-- does a tracking profile exist for specified type/assembly?
			SELECT
				COUNT(*)
			INTO
				l_EXISTS
			FROM
				DUAL
			WHERE
				EXISTS (
					SELECT
						NULL
					FROM
						TRACKING_PROFILE TP
						INNER JOIN TYPE T ON TP.WORKFLOW_TYPE_ID = T.TYPE_ID
					WHERE
						T.TYPE_FULL_NAME = p_TYPE_FULL_NAME
						AND T.ASSEMBLY_FULL_NAME = p_ASSEMBLY_FULL_NAME
				);
			
			IF l_EXISTS = 0	THEN
				-- tracking profile doesn't exist, create from default
				GetTypeId(l_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
					
				INSERT INTO TRACKING_PROFILE
				(
					VERSION
					,WORKFLOW_TYPE_ID
					,TRACKING_PROFILE_XML
				)
				SELECT
					VERSION
					,l_TYPE_ID
					,NULL
				FROM (
						SELECT
							VERSION
						FROM
							DEFAULT_TRACKING_PROFILE
						ORDER BY
							INSERT_DATE_TIME DESC
				)
				WHERE
					ROWNUM = 1;
			END IF;
		END IF;
		
		OPEN p_TRACKING_PROFILE_XML FOR
			SELECT
				TRACKING_PROFILE_XML
				,VERSION
			FROM (
					SELECT
						NVL(TP.TRACKING_PROFILE_XML, DTP.TRACKING_PROFILE_XML) TRACKING_PROFILE_XML
						,TP.VERSION
					FROM
						TRACKING_PROFILE TP
						INNER JOIN TYPE T 
							ON TP.WORKFLOW_TYPE_ID = T.TYPE_ID
						LEFT OUTER JOIN DEFAULT_TRACKING_PROFILE DTP 
							ON TP.VERSION = DTP.VERSION
					WHERE
						T.TYPE_FULL_NAME = p_TYPE_FULL_NAME
						AND T.ASSEMBLY_FULL_NAME = p_ASSEMBLY_FULL_NAME
						AND TP.VERSION != c_DELETED_VERSION
						AND TP.VERSION = NVL(p_VERSION, TP.VERSION)
					ORDER BY
						TP.INSERT_DATE_TIME DESC
			)
			WHERE
				ROWNUM = 1;
				
	END GetTrackingProfile;

	/*
	 * Retrieve all changed tracking profiles since a specific date/time.
	 */	
	PROCEDURE GetTrackingProfileChanges
	(
		p_LAST_CHECK IN TRACKING_PROFILE.INSERT_DATE_TIME%TYPE
		,p_NEXT_CHECK OUT TRACKING_PROFILE.INSERT_DATE_TIME%TYPE
		,p_TRACKING_PROFILE_XML OUT RefCursor
	)
	AS
	BEGIN
		SELECT
			SYS_EXTRACT_UTC(SYSTIMESTAMP)
		INTO
			p_NEXT_CHECK
		FROM
			DUAL;
							
		OPEN p_TRACKING_PROFILE_XML FOR
			SELECT
				T.TYPE_FULL_NAME
				,T.ASSEMBLY_FULL_NAME
				,NVL(TP.TRACKING_PROFILE_XML, DTP.TRACKING_PROFILE_XML) TRACKING_PROFILE_XML
				,TP.INSERT_DATE_TIME
			FROM
				TRACKING_PROFILE TP
				INNER JOIN TYPE T
					ON TP.WORKFLOW_TYPE_ID = T.TYPE_ID
				LEFT OUTER JOIN DEFAULT_TRACKING_PROFILE DTP
					ON TP.VERSION = DTP.VERSION
			WHERE
				TP.INSERT_DATE_TIME > p_LAST_CHECK
				AND TP.INSERT_DATE_TIME <= p_NEXT_CHECK
				AND TP.TRACKING_PROFILE_ID IN (
					SELECT MAX(TRACKING_PROFILE_ID)
					FROM TRACKING_PROFILE TP
					GROUP BY WORKFLOW_TYPE_ID
				);
	END;
		
	/*
	 * Create a new version of the default tracking profile.
	 */	
	PROCEDURE UpdateDefaultTrackingProfile
	(
		p_VERSION IN DEFAULT_TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML IN DEFAULT_TRACKING_PROFILE.TRACKING_PROFILE_XML%TYPE
	)
	AS
		l_NEWER_VERSION_EXISTS NUMBER;
	BEGIN
		-- check the version number is valid
		SELECT
			COUNT(*)
		INTO
			l_NEWER_VERSION_EXISTS
		FROM
			DUAL
		WHERE
			EXISTS (
				SELECT
					NULL
				FROM
					DEFAULT_TRACKING_PROFILE
				WHERE
					VERSION >= p_VERSION
			);
			
		IF l_NEWER_VERSION_EXISTS > 0 THEN
			RAISE_APPLICATION_ERROR(-20000, 'A version already exists that is greater than or equal to the new version');
		END IF;
		
		INSERT INTO DEFAULT_TRACKING_PROFILE
		(
			VERSION
			,TRACKING_PROFILE_XML
		)
		VALUES
		(
			p_VERSION
			,p_TRACKING_PROFILE_XML
		);
	END;
	
	/*
	 * Create a tracking profile for a particular workflow instance.
	 */
	PROCEDURE UpdateTrackingProfile
	(
		p_INSTANCE_ID IN TRACKING_PROFILE_INSTANCE.INSTANCE_ID%TYPE
		,p_TRACKING_PROFILE_XML IN TRACKING_PROFILE_INSTANCE.TRACKING_PROFILE_XML%TYPE
	)
	AS
	BEGIN
		UPDATE TRACKING_PROFILE_INSTANCE
		SET
			TRACKING_PROFILE_XML = p_TRACKING_PROFILE_XML
		WHERE
			INSTANCE_ID = p_INSTANCE_ID;
			
		IF NVL(SQL%ROWCOUNT, 0) = 0	THEN
			-- no rows updated, perform an insert instead
			INSERT INTO TRACKING_PROFILE_INSTANCE
			(
				INSTANCE_ID
				,TRACKING_PROFILE_XML
			)
			VALUES
			(
				p_INSTANCE_ID
				,p_TRACKING_PROFILE_XML
			);
		END IF;

	END;
	
	/*
	 * Create a new version of the tracking profile for a particular workflow type
	 */
	PROCEDURE UpdateTrackingProfile
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_VERSION IN TRACKING_PROFILE.VERSION%TYPE
		,p_TRACKING_PROFILE_XML IN TRACKING_PROFILE.TRACKING_PROFILE_XML%TYPE
	)
	AS
		l_TYPE_ID NUMBER(18);
		l_NEWER_VERSION_EXISTS NUMBER;
	BEGIN
		GetTypeId(l_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
		
		-- check the version number is valid
		SELECT
			COUNT(*)
		INTO
			l_NEWER_VERSION_EXISTS
		FROM
			DUAL
		WHERE
			EXISTS (
				SELECT
					NULL
				FROM
					TRACKING_PROFILE
				WHERE
					WORKFLOW_TYPE_ID = l_TYPE_ID
					AND VERSION >= p_VERSION
			);
			
		IF l_NEWER_VERSION_EXISTS > 0 THEN
			RAISE_APPLICATION_ERROR(-20000, 'A version already exists that is greater than or equal to the new version');
		END IF;
		
		INSERT INTO TRACKING_PROFILE
		(
			VERSION
			,WORKFLOW_TYPE_ID
			,TRACKING_PROFILE_XML
		)
		VALUES
		(
			p_VERSION
			,l_TYPE_ID
			,p_TRACKING_PROFILE_XML
		);
			
	END;

	/*
	 * Insert a workflow type record.
	 */
	PROCEDURE InsertWorkflow
	(
		p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_IS_INSTANCE_TYPE IN TYPE.IS_INSTANCE_TYPE%TYPE
		,p_WORKFLOW_DEFINITION IN WORKFLOW.WORKFLOW_DEFINITION%TYPE
		,p_WORKFLOW_TYPE_ID OUT WORKFLOW.WORKFLOW_TYPE_ID%TYPE
		,p_EXISTS OUT NUMBER
	)
	AS
	BEGIN
		GetTypeId(p_WORKFLOW_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME, p_IS_INSTANCE_TYPE);
		
		SELECT
			COUNT(*)
		INTO
			p_EXISTS
		FROM
			DUAL
		WHERE
			EXISTS (
				SELECT NULL FROM WORKFLOW WHERE WORKFLOW_TYPE_ID = p_WORKFLOW_TYPE_ID
			);
			
		IF p_EXISTS = 0 THEN
			-- record doesn't currently exist, insert the workflow
			INSERT INTO WORKFLOW
			(
				WORKFLOW_TYPE_ID
				,WORKFLOW_DEFINITION
			)
			VALUES
			(
				p_WORKFLOW_TYPE_ID
				,p_WORKFLOW_DEFINITION
			);
			
		ELSE
			SELECT 1 INTO p_EXISTS FROM DUAL;
		END IF;
		
	END InsertWorkflow;

	/*
	 * Insert the activities associated with a workflow.
	 */
	PROCEDURE InsertActivities
	(
		p_WORKFLOW_TYPE_ID IN ACTIVITY.WORKFLOW_TYPE_ID%TYPE
		,p_ACTIVITY_XML IN NCLOB
	)
	AS
		l_ACTIVITY_XML XMLTYPE := XMLTYPE(p_ACTIVITY_XML);
		l_ACTIVITY_INDEX NUMBER(9) := 1;
		l_QUALIFIED_NAME VARCHAR2(128);
		l_TYPE_FULL_NAME VARCHAR2(128);
		l_ASSEMBLY_FULL_NAME VARCHAR2(256);
		l_PARENT_QUALIFIED_NAME VARCHAR2(128);
		l_ACTIVITY_TYPE_ID NUMBER(18);
	BEGIN

		SELECT EXTRACTVALUE(l_ACTIVITY_XML, '/Activities/Activity[' || l_ACTIVITY_INDEX || ']/QualifiedName')
		INTO l_QUALIFIED_NAME FROM DUAL;
		
		WHILE l_QUALIFIED_NAME IS NOT NULL AND LENGTH(l_QUALIFIED_NAME) > 0 LOOP
		
			SELECT EXTRACTVALUE(l_ACTIVITY_XML, '/Activities/Activity[' || l_ACTIVITY_INDEX || ']/TypeFullName')
			INTO l_TYPE_FULL_NAME FROM DUAL;
			SELECT EXTRACTVALUE(l_ACTIVITY_XML, '/Activities/Activity[' || l_ACTIVITY_INDEX || ']/AssemblyFullName')
			INTO l_ASSEMBLY_FULL_NAME FROM DUAL;
			SELECT EXTRACTVALUE(l_ACTIVITY_XML, '/Activities/Activity[' || l_ACTIVITY_INDEX || ']/ParentQualifiedName')
			INTO l_PARENT_QUALIFIED_NAME FROM DUAL;
			
			GetTypeId(l_ACTIVITY_TYPE_ID, l_TYPE_FULL_NAME, l_ASSEMBLY_FULL_NAME);
			
			INSERT INTO ACTIVITY
			(
				WORKFLOW_TYPE_ID
				,QUALIFIED_NAME
				,ACTIVITY_TYPE_ID
				,PARENT_QUALIFIED_NAME
			)
			VALUES
			(
				p_WORKFLOW_TYPE_ID
				,l_QUALIFIED_NAME
				,l_ACTIVITY_TYPE_ID
				,l_PARENT_QUALIFIED_NAME
			);
			
			l_ACTIVITY_INDEX := l_ACTIVITY_INDEX + 1;
			
			SELECT EXTRACTVALUE(l_ACTIVITY_XML, '/Activities/Activity[' || l_ACTIVITY_INDEX || ']/QualifiedName')
			INTO l_QUALIFIED_NAME FROM DUAL;
		END LOOP;
				
	END;
	
	/*
	 * Insert a workflow instance record.
	 */	
	PROCEDURE InsertWorkflowInstance
	(
		p_INSTANCE_ID IN WORKFLOW_INSTANCE.INSTANCE_ID%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_CONTEXT_GUID IN WORKFLOW_INSTANCE.CONTEXT_GUID%TYPE
		,p_CALLER_INSTANCE_ID IN WORKFLOW_INSTANCE.CALLER_INSTANCE_ID%TYPE := NULL
		,p_CALL_PATH IN WORKFLOW_INSTANCE.CALL_PATH%TYPE := NULL
		,p_CALLER_CONTEXT_GUID IN WORKFLOW_INSTANCE.CALLER_CONTEXT_GUID%TYPE := NULL
		,p_CALLER_PARENT_CONTEXT_GUID IN WORKFLOW_INSTANCE.CALLER_PARENT_CONTEXT_GUID%TYPE := NULL
		,p_INITIALISED_DATE_TIME IN WORKFLOW_INSTANCE.INITIALISED_DATE_TIME%TYPE
		,p_WORKFLOW_INSTANCE_ID OUT RefCursor
	)
	AS
		l_WORKFLOW_TYPE_ID NUMBER(18);
		l_WORKFLOW_INSTANCE_ID NUMBER(18);
	BEGIN
		GetTypeId(l_WORKFLOW_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
		
		SELECT
			WORKFLOW_INSTANCE_ID
		INTO
			l_WORKFLOW_INSTANCE_ID
		FROM
			WORKFLOW_INSTANCE
		WHERE
			WORKFLOW_TYPE_ID = l_WORKFLOW_TYPE_ID
			AND INSTANCE_ID = p_INSTANCE_ID;

		OPEN p_WORKFLOW_INSTANCE_ID FOR
			SELECT CAST(l_WORKFLOW_INSTANCE_ID AS NUMBER(18)) FROM DUAL;
			
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				INSERT INTO WORKFLOW_INSTANCE
				(
					INSTANCE_ID
					,CONTEXT_GUID
					,CALLER_INSTANCE_ID
					,CALL_PATH
					,CALLER_CONTEXT_GUID
					,CALLER_PARENT_CONTEXT_GUID
					,WORKFLOW_TYPE_ID
					,INITIALISED_DATE_TIME
				)
				VALUES
				(
					p_INSTANCE_ID
					,p_CONTEXT_GUID
					,p_CALLER_INSTANCE_ID
					,p_CALL_PATH
					,p_CALLER_CONTEXT_GUID
					,p_CALLER_PARENT_CONTEXT_GUID
					,l_WORKFLOW_TYPE_ID
					,p_INITIALISED_DATE_TIME
				)
				RETURNING WORKFLOW_INSTANCE_ID
				INTO l_WORKFLOW_INSTANCE_ID;
				
				OPEN p_WORKFLOW_INSTANCE_ID FOR
					SELECT CAST(l_WORKFLOW_INSTANCE_ID AS NUMBER(18)) FROM DUAL;
				
			WHEN OTHERS THEN
				RAISE;
				
	END InsertWorkflowInstance;

	/*
	 * Insert a batch of activity tracking records.
	 */	
	PROCEDURE InsertActivityTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_1 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_STATUS_ID_1 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_1 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE
		,p_ACTIVITY_STATUS_EVENT_ID_1 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_2 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_2 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_2 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_2 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_2 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_2 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_3 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_3 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_3 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_3 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_3 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_3 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_4 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_4 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_4 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_4 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_4 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_4 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_5 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_5 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_ACTIVITY_STATUS_ID_5 IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE := NULL
		,p_EVENT_DATE_TIME_5 IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_5 IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE := NULL
		,p_ACTIVITY_STATUS_EVENT_ID_5 OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
	)
	AS
	BEGIN
		-- parameter set 1
		InsertActivityTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_1, p_QUALIFIED_NAME_1, 
			p_CONTEXT_GUID_1, p_PARENT_CONTEXT_GUID_1, 
			p_ACTIVITY_STATUS_ID_1, p_EVENT_DATE_TIME_1, 
			p_EVENT_ORDER_1, p_ACTIVITY_STATUS_EVENT_ID_1);
			
		-- parameter set 2
		IF p_QUALIFIED_NAME_2 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_2 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_2 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_2 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_2 := p_ACTIVITY_INSTANCE_ID_1;
		END IF;
		
		InsertActivityTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_2, p_QUALIFIED_NAME_2, 
			p_CONTEXT_GUID_2, p_PARENT_CONTEXT_GUID_2, 
			p_ACTIVITY_STATUS_ID_2, p_EVENT_DATE_TIME_2, 
			p_EVENT_ORDER_2, p_ACTIVITY_STATUS_EVENT_ID_2);
			
		-- parameter set 3
		IF p_QUALIFIED_NAME_3 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_3 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_3 := p_ACTIVITY_INSTANCE_ID_2;
		END IF;
		
		InsertActivityTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_3, p_QUALIFIED_NAME_3, 
			p_CONTEXT_GUID_3, p_PARENT_CONTEXT_GUID_3, 
			p_ACTIVITY_STATUS_ID_3, p_EVENT_DATE_TIME_3, 
			p_EVENT_ORDER_3, p_ACTIVITY_STATUS_EVENT_ID_3);
			
		-- parameter set 4
		IF p_QUALIFIED_NAME_4 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_2;
		ELSIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_3 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_3;
		END IF;
		
		InsertActivityTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_4, p_QUALIFIED_NAME_4, 
			p_CONTEXT_GUID_4, p_PARENT_CONTEXT_GUID_4, 
			p_ACTIVITY_STATUS_ID_4, p_EVENT_DATE_TIME_4, 
			p_EVENT_ORDER_4, p_ACTIVITY_STATUS_EVENT_ID_4);
			
		-- parameter set 5
		IF p_QUALIFIED_NAME_5 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_2;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_3 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_3;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_4 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_4 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_4 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_4;
		END IF;
		
		InsertActivityTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_5, p_QUALIFIED_NAME_5, 
			p_CONTEXT_GUID_5, p_PARENT_CONTEXT_GUID_5, 
			p_ACTIVITY_STATUS_ID_5, p_EVENT_DATE_TIME_5, 
			p_EVENT_ORDER_5, p_ACTIVITY_STATUS_EVENT_ID_5);
	END;
	
	/*
	 * Insert a single activity tracking record.
	 */	
	PROCEDURE InsertActivityTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_STATUS_ID IN ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME IN ACTIVITY_STATUS_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN ACTIVITY_STATUS_EVENT.EVENT_ORDER%TYPE
		,p_ACTIVITY_STATUS_EVENT_ID OUT ACTIVITY_STATUS_EVENT.ACTIVITY_STATUS_EVENT_ID%TYPE
	)
	AS
	BEGIN
		IF p_ACTIVITY_INSTANCE_ID IS NULL THEN
			-- grab the activity instance id
			GetActivityInstanceId(p_WORKFLOW_INSTANCE_ID, 
				p_QUALIFIED_NAME, p_CONTEXT_GUID, p_PARENT_CONTEXT_GUID, 
				p_ACTIVITY_INSTANCE_ID);
		END IF;
		
		-- and insert the actual record into the event table
		INSERT INTO ACTIVITY_STATUS_EVENT
		(
			WORKFLOW_INSTANCE_ID
			,ACTIVITY_INSTANCE_ID
			,ACTIVITY_STATUS_ID
			,EVENT_ORDER
			,EVENT_DATE_TIME
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_ACTIVITY_INSTANCE_ID
			,p_ACTIVITY_STATUS_ID
			,p_EVENT_ORDER
			,p_EVENT_DATE_TIME
		)
		RETURNING ACTIVITY_STATUS_EVENT_ID
		INTO p_ACTIVITY_STATUS_EVENT_ID;
	END;

	/*
	 * Insert a batch of user tracking records.
	 */	
	PROCEDURE InsertUserTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_1 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID_1 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_EVENT_DATE_TIME_1 IN USER_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN USER_EVENT.EVENT_ORDER%TYPE
		,p_USER_DATA_KEY_1 IN USER_EVENT.USER_DATA_KEY%TYPE
		,p_USER_DATA_TYPE_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_USER_DATA_ASSEMBLY_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_USER_DATA_STR_1 IN USER_EVENT.USER_DATA_STR%TYPE
		,p_USER_DATA_BLOB_1 IN USER_EVENT.USER_DATA_BLOB%TYPE
		,p_USER_DATA_NON_SERIALISABLE_1 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE
		,p_USER_EVENT_ID_1 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_2 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_2 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_2 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_2 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_2 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_2 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_2 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_2 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_2 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_2 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_3 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_3 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_3 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_3 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_3 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_3 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_3 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_3 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_3 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_3 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_4 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_4 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_4 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_4 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_4 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_4 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_4 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_4 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_4 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_4 OUT USER_EVENT.USER_EVENT_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID_5 IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME_5 IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE := NULL
		,p_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE := NULL
		,p_PARENT_CONTEXT_GUID_5 IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE := NULL
		,p_EVENT_DATE_TIME_5 IN USER_EVENT.EVENT_DATE_TIME%TYPE := NULL
		,p_EVENT_ORDER_5 IN USER_EVENT.EVENT_ORDER%TYPE := NULL
		,p_USER_DATA_KEY_5 IN USER_EVENT.USER_DATA_KEY%TYPE := NULL
		,p_USER_DATA_TYPE_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_USER_DATA_ASSEMBLY_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_USER_DATA_STR_5 IN USER_EVENT.USER_DATA_STR%TYPE := NULL
		,p_USER_DATA_BLOB_5 IN USER_EVENT.USER_DATA_BLOB%TYPE := NULL
		,p_USER_DATA_NON_SERIALISABLE_5 IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE := NULL
		,p_USER_EVENT_ID_5 OUT USER_EVENT.USER_EVENT_ID%TYPE
	)
	AS
	BEGIN
		-- parameter set 1
		InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_1, p_QUALIFIED_NAME_1, 
			p_CONTEXT_GUID_1, p_PARENT_CONTEXT_GUID_1, 
			p_EVENT_DATE_TIME_1, p_EVENT_ORDER_1, 
			p_USER_DATA_KEY_1, p_USER_DATA_TYPE_NAME_1, 
			p_USER_DATA_ASSEMBLY_NAME_1, p_USER_DATA_STR_1, 
			p_USER_DATA_BLOB_1, p_USER_DATA_NON_SERIALISABLE_1, 
			p_USER_EVENT_ID_1);
			
		-- parameter set 2
		IF p_QUALIFIED_NAME_2 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_2 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_2 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_2 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_2 := p_ACTIVITY_INSTANCE_ID_1;
		END IF;
		
		InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_2, p_QUALIFIED_NAME_2, 
			p_CONTEXT_GUID_2, p_PARENT_CONTEXT_GUID_2, 
			p_EVENT_DATE_TIME_2, p_EVENT_ORDER_2, 
			p_USER_DATA_KEY_2, p_USER_DATA_TYPE_NAME_2, 
			p_USER_DATA_ASSEMBLY_NAME_2, p_USER_DATA_STR_2, 
			p_USER_DATA_BLOB_2, p_USER_DATA_NON_SERIALISABLE_2, 
			p_USER_EVENT_ID_2);
			
		-- parameter set 3
		IF p_QUALIFIED_NAME_3 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_3 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_3 := p_ACTIVITY_INSTANCE_ID_2;
		END IF;
		
		InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_3, p_QUALIFIED_NAME_3, 
			p_CONTEXT_GUID_3, p_PARENT_CONTEXT_GUID_3, 
			p_EVENT_DATE_TIME_3, p_EVENT_ORDER_3, 
			p_USER_DATA_KEY_3, p_USER_DATA_TYPE_NAME_3, 
			p_USER_DATA_ASSEMBLY_NAME_3, p_USER_DATA_STR_3, 
			p_USER_DATA_BLOB_3, p_USER_DATA_NON_SERIALISABLE_3, 
			p_USER_EVENT_ID_3);
			
		-- parameter set 4
		IF p_QUALIFIED_NAME_4 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_2;
		ELSIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_3 THEN
			p_ACTIVITY_INSTANCE_ID_4 := p_ACTIVITY_INSTANCE_ID_3;
		END IF;
		
		InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_4, p_QUALIFIED_NAME_4, 
			p_CONTEXT_GUID_4, p_PARENT_CONTEXT_GUID_4, 
			p_EVENT_DATE_TIME_4, p_EVENT_ORDER_4, 
			p_USER_DATA_KEY_4, p_USER_DATA_TYPE_NAME_4, 
			p_USER_DATA_ASSEMBLY_NAME_4, p_USER_DATA_STR_4, 
			p_USER_DATA_BLOB_4, p_USER_DATA_NON_SERIALISABLE_4, 
			p_USER_EVENT_ID_4);
			
		-- parameter set 5
		IF p_QUALIFIED_NAME_5 IS NULL THEN
			RETURN;
		END IF;
		
		IF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_1 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_1;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_2 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_2;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_3 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_3;
		ELSIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_4 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_4 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_4 THEN
			p_ACTIVITY_INSTANCE_ID_5 := p_ACTIVITY_INSTANCE_ID_4;
		END IF;
		
		InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_ACTIVITY_INSTANCE_ID_5, p_QUALIFIED_NAME_5, 
			p_CONTEXT_GUID_5, p_PARENT_CONTEXT_GUID_5, 
			p_EVENT_DATE_TIME_5, p_EVENT_ORDER_5, 
			p_USER_DATA_KEY_5, p_USER_DATA_TYPE_NAME_5, 
			p_USER_DATA_ASSEMBLY_NAME_5, p_USER_DATA_STR_5, 
			p_USER_DATA_BLOB_5, p_USER_DATA_NON_SERIALISABLE_5, 
			p_USER_EVENT_ID_5);
	END;
	
	/*
	 * Insert a single user tracking records.
	 */	
	PROCEDURE InsertUserTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_ACTIVITY_INSTANCE_ID IN OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_EVENT_DATE_TIME IN USER_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN USER_EVENT.EVENT_ORDER%TYPE
		,p_USER_DATA_KEY IN USER_EVENT.USER_DATA_KEY%TYPE
		,p_USER_DATA_TYPE_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_USER_DATA_ASSEMBLY_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_USER_DATA_STR IN USER_EVENT.USER_DATA_STR%TYPE
		,p_USER_DATA_BLOB IN USER_EVENT.USER_DATA_BLOB%TYPE
		,p_USER_DATA_NON_SERIALISABLE IN USER_EVENT.USER_DATA_NON_SERIALISABLE%TYPE
		,p_USER_EVENT_ID OUT USER_EVENT.USER_EVENT_ID%TYPE
	)
	AS
		l_USER_DATA_TYPE_ID USER_EVENT.USER_DATA_TYPE_ID%TYPE := NULL;
	BEGIN
		IF p_ACTIVITY_INSTANCE_ID IS NULL THEN
			-- grab the activity instance id
			GetActivityInstanceId(p_WORKFLOW_INSTANCE_ID, 
				p_QUALIFIED_NAME, p_CONTEXT_GUID, p_PARENT_CONTEXT_GUID, 
				p_ACTIVITY_INSTANCE_ID);
		END IF;
		
		GetTypeId(l_USER_DATA_TYPE_ID, p_USER_DATA_TYPE_NAME, p_USER_DATA_ASSEMBLY_NAME);
		
		-- and insert the actual record into the event table
		INSERT INTO USER_EVENT
		(
			WORKFLOW_INSTANCE_ID
			,ACTIVITY_INSTANCE_ID
			,EVENT_ORDER
			,EVENT_DATE_TIME
			,USER_DATA_KEY
			,USER_DATA_TYPE_ID
			,USER_DATA_STR
			,USER_DATA_BLOB
			,USER_DATA_NON_SERIALISABLE
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_ACTIVITY_INSTANCE_ID
			,p_EVENT_ORDER
			,p_EVENT_DATE_TIME
			,p_USER_DATA_KEY
			,l_USER_DATA_TYPE_ID
			,p_USER_DATA_STR
			,p_USER_DATA_BLOB
			,p_USER_DATA_NON_SERIALISABLE
		)
		RETURNING USER_EVENT_ID
		INTO p_USER_EVENT_ID;
	END;

	/*
	 * Insert a batch of workflow tracking records.
	 */	
	PROCEDURE InsertWorkflowTrackingRecords
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_1 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_1 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_2 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_2 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_3 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_3 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_4 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_4 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS_5 IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG_5 IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
	)
	AS
	BEGIN
		-- parameter set 1
		InsertWorkflowTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_WORKFLOW_INSTANCE_STATUS_1, 
			p_EVENT_DATE_TIME_1, p_EVENT_ORDER_1, 
			p_EVENT_ARG_TYPE_NAME_1, p_EVENT_ARG_ASSEMBLY_NAME_1, 
			p_EVENT_ARG_1, p_WORKFLOW_INSTANCE_EVENT_ID_1);

		-- parameter set 2
		IF p_WORKFLOW_INSTANCE_STATUS_2 IS NULL THEN
			RETURN;
		END IF;

		InsertWorkflowTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_WORKFLOW_INSTANCE_STATUS_2, 
			p_EVENT_DATE_TIME_2, p_EVENT_ORDER_2, 
			p_EVENT_ARG_TYPE_NAME_2, p_EVENT_ARG_ASSEMBLY_NAME_2, 
			p_EVENT_ARG_2, p_WORKFLOW_INSTANCE_EVENT_ID_2);

		-- parameter set 3
		IF p_WORKFLOW_INSTANCE_STATUS_3 IS NULL THEN
			RETURN;
		END IF;

		InsertWorkflowTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_WORKFLOW_INSTANCE_STATUS_3, 
			p_EVENT_DATE_TIME_3, p_EVENT_ORDER_3, 
			p_EVENT_ARG_TYPE_NAME_3, p_EVENT_ARG_ASSEMBLY_NAME_3, 
			p_EVENT_ARG_3, p_WORKFLOW_INSTANCE_EVENT_ID_3);
			
		-- parameter set 4
		IF p_WORKFLOW_INSTANCE_STATUS_4 IS NULL THEN
			RETURN;
		END IF;

		InsertWorkflowTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_WORKFLOW_INSTANCE_STATUS_4, 
			p_EVENT_DATE_TIME_4, p_EVENT_ORDER_4, 
			p_EVENT_ARG_TYPE_NAME_4, p_EVENT_ARG_ASSEMBLY_NAME_4, 
			p_EVENT_ARG_4, p_WORKFLOW_INSTANCE_EVENT_ID_4);
			
		-- parameter set 5
		IF p_WORKFLOW_INSTANCE_STATUS_5 IS NULL THEN
			RETURN;
		END IF;

		InsertWorkflowTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
			p_WORKFLOW_INSTANCE_STATUS_5, 
			p_EVENT_DATE_TIME_5, p_EVENT_ORDER_5, 
			p_EVENT_ARG_TYPE_NAME_5, p_EVENT_ARG_ASSEMBLY_NAME_5, 
			p_EVENT_ARG_5, p_WORKFLOW_INSTANCE_EVENT_ID_5);
	END;
	
	/*
	 * Insert a single workflow tracking record.
	 */	
	PROCEDURE InsertWorkflowTrackingRecord
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_STATUS IN WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_STATUS_ID%TYPE
		,p_EVENT_DATE_TIME IN WORKFLOW_INSTANCE_EVENT.EVENT_DATE_TIME%TYPE
		,p_EVENT_ORDER IN WORKFLOW_INSTANCE_EVENT.EVENT_ORDER%TYPE
		,p_EVENT_ARG_TYPE_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_EVENT_ARG_ASSEMBLY_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_EVENT_ARG IN WORKFLOW_INSTANCE_EVENT.EVENT_ARG%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID OUT WORKFLOW_INSTANCE_EVENT.WORKFLOW_INSTANCE_EVENT_ID%TYPE
	)
	AS
		l_EVENT_ARG_TYPE_ID WORKFLOW_INSTANCE_EVENT.EVENT_ARG_TYPE_ID%TYPE := NULL;
	BEGIN
		IF p_EVENT_ARG_TYPE_NAME IS NOT NULL AND p_EVENT_ARG_ASSEMBLY_NAME IS NOT NULL THEN
			GetTypeId(l_EVENT_ARG_TYPE_ID, p_EVENT_ARG_TYPE_NAME, p_EVENT_ARG_ASSEMBLY_NAME);
		END IF;
		
		-- and insert the actual record into the event table
		INSERT INTO WORKFLOW_INSTANCE_EVENT
		(
			WORKFLOW_INSTANCE_ID
			,WORKFLOW_INSTANCE_STATUS_ID
			,EVENT_ORDER
			,EVENT_DATE_TIME
			,EVENT_ARG_TYPE_ID
			,EVENT_ARG
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_WORKFLOW_INSTANCE_STATUS
			,p_EVENT_ORDER
			,p_EVENT_DATE_TIME
			,l_EVENT_ARG_TYPE_ID
			,p_EVENT_ARG
		)
		RETURNING WORKFLOW_INSTANCE_EVENT_ID
		INTO p_WORKFLOW_INSTANCE_EVENT_ID;
	END;

	/*
	 * Insert a batch of activity added actions.
	 */	
	PROCEDURE InsertActivityAddedActions
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME_1 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME_1 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_ADDED_ACTIVITY_ACTION_1 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE
		,p_ORDER_1 IN ADDED_ACTIVITY."ORDER"%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_2 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_2 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_2 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_2 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_3 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_3 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_3 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_3 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_4 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_4 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_4 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_4 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_5 IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_5 IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_ADDED_ACTIVITY_ACTION_5 IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_5 IN ADDED_ACTIVITY."ORDER"%TYPE := NULL
	)
	AS
	BEGIN
		-- parameter set 1
		IF p_WORKFLOW_INSTANCE_EVENT_ID_1 IS NOT NULL THEN
			InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_1, p_QUALIFIED_NAME_1, 
				p_TYPE_FULL_NAME_1, p_ASSEMBLY_FULL_NAME_1,
				p_PARENT_QUALIFIED_NAME_1, p_ADDED_ACTIVITY_ACTION_1, 
				p_ORDER_1);
		END IF;
		
		-- parameter set 2
		IF p_WORKFLOW_INSTANCE_EVENT_ID_2 IS NOT NULL THEN
			InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_2, p_QUALIFIED_NAME_2, 
				p_TYPE_FULL_NAME_2, p_ASSEMBLY_FULL_NAME_2,
				p_PARENT_QUALIFIED_NAME_2, p_ADDED_ACTIVITY_ACTION_2, 
				p_ORDER_2);
		END IF;
		
		-- parameter set 3
		IF p_WORKFLOW_INSTANCE_EVENT_ID_3 IS NOT NULL THEN
			InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_3, p_QUALIFIED_NAME_3, 
				p_TYPE_FULL_NAME_3, p_ASSEMBLY_FULL_NAME_3,
				p_PARENT_QUALIFIED_NAME_3, p_ADDED_ACTIVITY_ACTION_3, 
				p_ORDER_3);
		END IF;
		
		-- parameter set 4
		IF p_WORKFLOW_INSTANCE_EVENT_ID_4 IS NOT NULL THEN
			InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_4, p_QUALIFIED_NAME_4, 
				p_TYPE_FULL_NAME_4, p_ASSEMBLY_FULL_NAME_4,
				p_PARENT_QUALIFIED_NAME_4, p_ADDED_ACTIVITY_ACTION_4, 
				p_ORDER_4);
		END IF;
		
		-- parameter set 5
		IF p_WORKFLOW_INSTANCE_EVENT_ID_5 IS NOT NULL THEN
			InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_5, p_QUALIFIED_NAME_5, 
				p_TYPE_FULL_NAME_5, p_ASSEMBLY_FULL_NAME_5,
				p_PARENT_QUALIFIED_NAME_5, p_ADDED_ACTIVITY_ACTION_5, 
				p_ORDER_5);
		END IF;
	END InsertActivityAddedActions;
	
	/*
	 * Insert a single activity added action.
	 */	
	PROCEDURE InsertActivityAddedAction
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID IN ADDED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME IN ADDED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME IN ADDED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_ADDED_ACTIVITY_ACTION IN ADDED_ACTIVITY.ADDED_ACTIVITY_ACTION%TYPE
		,p_ORDER IN ADDED_ACTIVITY."ORDER"%TYPE
	)
	AS
		l_ACTIVITY_TYPE_ID ADDED_ACTIVITY.ACTIVITY_TYPE_ID%TYPE := NULL;
	BEGIN
		GetTypeId(l_ACTIVITY_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
		
		INSERT INTO ADDED_ACTIVITY
		(
			WORKFLOW_INSTANCE_ID
			,WORKFLOW_INSTANCE_EVENT_ID
			,QUALIFIED_NAME
			,ACTIVITY_TYPE_ID
			,PARENT_QUALIFIED_NAME
			,ADDED_ACTIVITY_ACTION
			,"ORDER"
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_WORKFLOW_INSTANCE_EVENT_ID
			,p_QUALIFIED_NAME
			,l_ACTIVITY_TYPE_ID
			,p_PARENT_QUALIFIED_NAME
			,p_ADDED_ACTIVITY_ACTION
			,p_ORDER
		);
	END InsertActivityAddedAction;

	/*
	 * Insert a single activity removed action.
	 */	
	PROCEDURE InsertActivityRemovedActions
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_1 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME_1 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME_1 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_REMOVED_ACTIVITY_ACTION_1 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE
		,p_ORDER_1 IN REMOVED_ACTIVITY."ORDER"%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID_2 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_2 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_2 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_2 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_2 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_3 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_3 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_3 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_3 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_3 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_4 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_4 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_4 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_4 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_4 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
		,p_WORKFLOW_INSTANCE_EVENT_ID_5 IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL
		,p_QUALIFIED_NAME_5 IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_PARENT_QUALIFIED_NAME_5 IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE := NULL
		,p_REMOVED_ACTIVITY_ACTION_5 IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE := NULL
		,p_ORDER_5 IN REMOVED_ACTIVITY."ORDER"%TYPE := NULL
	)
	AS
	BEGIN
		-- parameter set 1
		IF p_WORKFLOW_INSTANCE_EVENT_ID_1 IS NOT NULL THEN
			InsertActivityRemovedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_1, p_QUALIFIED_NAME_1, 
				p_TYPE_FULL_NAME_1, p_ASSEMBLY_FULL_NAME_1,
				p_PARENT_QUALIFIED_NAME_1, p_REMOVED_ACTIVITY_ACTION_1, 
				p_ORDER_1);
		END IF;
		
		-- parameter set 2
		IF p_WORKFLOW_INSTANCE_EVENT_ID_2 IS NOT NULL THEN
			InsertActivityRemovedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_2, p_QUALIFIED_NAME_2, 
				p_TYPE_FULL_NAME_2, p_ASSEMBLY_FULL_NAME_2,
				p_PARENT_QUALIFIED_NAME_2, p_REMOVED_ACTIVITY_ACTION_2, 
				p_ORDER_2);
		END IF;
		
		-- parameter set 3
		IF p_WORKFLOW_INSTANCE_EVENT_ID_3 IS NOT NULL THEN
			InsertActivityRemovedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_3, p_QUALIFIED_NAME_3, 
				p_TYPE_FULL_NAME_3, p_ASSEMBLY_FULL_NAME_3,
				p_PARENT_QUALIFIED_NAME_3, p_REMOVED_ACTIVITY_ACTION_3, 
				p_ORDER_3);
		END IF;
		
		-- parameter set 4
		IF p_WORKFLOW_INSTANCE_EVENT_ID_4 IS NOT NULL THEN
			InsertActivityRemovedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_4, p_QUALIFIED_NAME_4, 
				p_TYPE_FULL_NAME_4, p_ASSEMBLY_FULL_NAME_4,
				p_PARENT_QUALIFIED_NAME_4, p_REMOVED_ACTIVITY_ACTION_4, 
				p_ORDER_4);
		END IF;
		
		-- parameter set 5
		IF p_WORKFLOW_INSTANCE_EVENT_ID_5 IS NOT NULL THEN
			InsertActivityRemovedAction(p_WORKFLOW_INSTANCE_ID, 
				p_WORKFLOW_INSTANCE_EVENT_ID_5, p_QUALIFIED_NAME_5, 
				p_TYPE_FULL_NAME_5, p_ASSEMBLY_FULL_NAME_5,
				p_PARENT_QUALIFIED_NAME_5, p_REMOVED_ACTIVITY_ACTION_5, 
				p_ORDER_5);
		END IF;
	END;
	
	/*
	 * Insert a single activity removed action.
	 */	
	PROCEDURE InsertActivityRemovedAction
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_WORKFLOW_INSTANCE_EVENT_ID IN REMOVED_ACTIVITY.WORKFLOW_INSTANCE_EVENT_ID%TYPE
		,p_QUALIFIED_NAME IN REMOVED_ACTIVITY.QUALIFIED_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_PARENT_QUALIFIED_NAME IN REMOVED_ACTIVITY.PARENT_QUALIFIED_NAME%TYPE
		,p_REMOVED_ACTIVITY_ACTION IN REMOVED_ACTIVITY.REMOVED_ACTIVITY_ACTION%TYPE
		,p_ORDER IN REMOVED_ACTIVITY."ORDER"%TYPE
	)
	AS
		l_ACTIVITY_TYPE_ID REMOVED_ACTIVITY.ACTIVITY_TYPE_ID%TYPE := NULL;
	BEGIN
		GetTypeId(l_ACTIVITY_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
		
		INSERT INTO REMOVED_ACTIVITY
		(
			WORKFLOW_INSTANCE_ID
			,WORKFLOW_INSTANCE_EVENT_ID
			,QUALIFIED_NAME
			,ACTIVITY_TYPE_ID
			,PARENT_QUALIFIED_NAME
			,REMOVED_ACTIVITY_ACTION
			,"ORDER"
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_WORKFLOW_INSTANCE_EVENT_ID
			,p_QUALIFIED_NAME
			,l_ACTIVITY_TYPE_ID
			,p_PARENT_QUALIFIED_NAME
			,p_REMOVED_ACTIVITY_ACTION
			,p_ORDER
		);
	END InsertActivityRemovedAction;

	/*
	 * Insert a batch of event annotations.
	 */
	PROCEDURE InsertEventAnnotations
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_TYPE IN EVENT_ANNOTATION.EVENT_TYPE%TYPE
		,p_EVENT_ID_1 IN EVENT_ANNOTATION.EVENT_ID%TYPE
		,p_ANNOTATION_1 IN EVENT_ANNOTATION.ANNOTATION%TYPE		
		,p_EVENT_ID_2 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_2 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_3 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_3 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_4 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_4 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_EVENT_ID_5 IN EVENT_ANNOTATION.EVENT_ID%TYPE := NULL
		,p_ANNOTATION_5 IN EVENT_ANNOTATION.ANNOTATION%TYPE := NULL
	)
	AS
	BEGIN
		-- parameter set 1
		IF p_EVENT_ID_1 IS NOT NULL THEN
			InsertEventAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_1, p_EVENT_TYPE, p_ANNOTATION_1);
		END IF;
		
		-- parameter set 2
		IF p_EVENT_ID_2 IS NOT NULL THEN
			InsertEventAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_2, p_EVENT_TYPE, p_ANNOTATION_2);
		END IF;
		
		-- parameter set 3
		IF p_EVENT_ID_3 IS NOT NULL THEN
			InsertEventAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_3, p_EVENT_TYPE, p_ANNOTATION_3);
		END IF;
		
		-- parameter set 4
		IF p_EVENT_ID_4 IS NOT NULL THEN
			InsertEventAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_4, p_EVENT_TYPE, p_ANNOTATION_4);
		END IF;
		
		-- parameter set 5
		IF p_EVENT_ID_5 IS NOT NULL THEN
			InsertEventAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_5, p_EVENT_TYPE, p_ANNOTATION_5);
		END IF;
	END InsertEventAnnotations;
	
	/*
	 * Insert a single event annotation.
	 */	
	PROCEDURE InsertEventAnnotation
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_ID IN EVENT_ANNOTATION.EVENT_ID%TYPE
		,p_EVENT_TYPE IN EVENT_ANNOTATION.EVENT_TYPE%TYPE
		,p_ANNOTATION IN EVENT_ANNOTATION.ANNOTATION%TYPE
	)
	AS
	BEGIN
		INSERT INTO EVENT_ANNOTATION
		(
			WORKFLOW_INSTANCE_ID
			,EVENT_ID
			,EVENT_TYPE
			,ANNOTATION
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_EVENT_ID
			,p_EVENT_TYPE
			,p_ANNOTATION
		);
	END InsertEventAnnotation;
	
	/*
	 * Insert a batch of tracking data items.
	 */	
	PROCEDURE InsertTrackingDataItems
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_TYPE IN TRACKING_DATA_ITEM.EVENT_TYPE%TYPE
		,p_EVENT_ID_1 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE
		,p_FIELD_NAME_1 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE
		,p_TYPE_FULL_NAME_1 IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME_1 IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_DATA_STR_1 IN TRACKING_DATA_ITEM.DATA_STR%TYPE
		,p_DATA_BLOB_1 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE
		,p_DATA_NON_SERIALISABLE_1 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE
		,p_TRACKING_DATA_ITEM_ID_1 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_2 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_2 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_2 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_2 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_2 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_2 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_2 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_2 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_3 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_3 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_3 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_3 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_3 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_3 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_3 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_3 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_4 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_4 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_4 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_4 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_4 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_4 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_4 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_4 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
		,p_EVENT_ID_5 IN TRACKING_DATA_ITEM.EVENT_ID%TYPE := NULL
		,p_FIELD_NAME_5 IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE := NULL
		,p_TYPE_FULL_NAME_5 IN TYPE.TYPE_FULL_NAME%TYPE := NULL
		,p_ASSEMBLY_FULL_NAME_5 IN TYPE.ASSEMBLY_FULL_NAME%TYPE := NULL
		,p_DATA_STR_5 IN TRACKING_DATA_ITEM.DATA_STR%TYPE := NULL
		,p_DATA_BLOB_5 IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE := NULL
		,p_DATA_NON_SERIALISABLE_5 IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_5 OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
	)
	AS
	BEGIN
		-- parameter set 1
		IF p_EVENT_ID_1 IS NOT NULL THEN
			InsertTrackingDataItem(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_1, p_EVENT_TYPE, p_FIELD_NAME_1, 
				p_TYPE_FULL_NAME_1, p_ASSEMBLY_FULL_NAME_1, 
				p_DATA_STR_1, p_DATA_BLOB_1, p_DATA_NON_SERIALISABLE_1, 
				p_TRACKING_DATA_ITEM_ID_1);
		END IF;
		
		-- parameter set 2
		IF p_EVENT_ID_2 IS NOT NULL THEN
			InsertTrackingDataItem(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_2, p_EVENT_TYPE, p_FIELD_NAME_2, 
				p_TYPE_FULL_NAME_2, p_ASSEMBLY_FULL_NAME_2, 
				p_DATA_STR_2, p_DATA_BLOB_2, p_DATA_NON_SERIALISABLE_2, 
				p_TRACKING_DATA_ITEM_ID_2);
		END IF;
		
		-- parameter set 3
		IF p_EVENT_ID_3 IS NOT NULL THEN
			InsertTrackingDataItem(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_3, p_EVENT_TYPE, p_FIELD_NAME_3, 
				p_TYPE_FULL_NAME_3, p_ASSEMBLY_FULL_NAME_3, 
				p_DATA_STR_3, p_DATA_BLOB_3, p_DATA_NON_SERIALISABLE_3, 
				p_TRACKING_DATA_ITEM_ID_3);
		END IF;
		
		-- parameter set 4
		IF p_EVENT_ID_4 IS NOT NULL THEN
			InsertTrackingDataItem(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_4, p_EVENT_TYPE, p_FIELD_NAME_4, 
				p_TYPE_FULL_NAME_4, p_ASSEMBLY_FULL_NAME_4, 
				p_DATA_STR_4, p_DATA_BLOB_4, p_DATA_NON_SERIALISABLE_4, 
				p_TRACKING_DATA_ITEM_ID_4);
		END IF;
		
		-- parameter set 5
		IF p_EVENT_ID_5 IS NOT NULL THEN
			InsertTrackingDataItem(p_WORKFLOW_INSTANCE_ID, 
				p_EVENT_ID_5, p_EVENT_TYPE, p_FIELD_NAME_5, 
				p_TYPE_FULL_NAME_5, p_ASSEMBLY_FULL_NAME_5, 
				p_DATA_STR_5, p_DATA_BLOB_5, p_DATA_NON_SERIALISABLE_5, 
				p_TRACKING_DATA_ITEM_ID_5);
		END IF;
		
	END InsertTrackingDataItems;
	
	/*
	 * Insert a single tracking data item.
	 */
	PROCEDURE InsertTrackingDataItem
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_EVENT_ID IN TRACKING_DATA_ITEM.EVENT_ID%TYPE
		,p_EVENT_TYPE IN TRACKING_DATA_ITEM.EVENT_TYPE%TYPE
		,p_FIELD_NAME IN TRACKING_DATA_ITEM.FIELD_NAME%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_DATA_STR IN TRACKING_DATA_ITEM.DATA_STR%TYPE
		,p_DATA_BLOB IN TRACKING_DATA_ITEM.DATA_BLOB%TYPE
		,p_DATA_NON_SERIALISABLE IN TRACKING_DATA_ITEM.DATA_NON_SERIALISABLE%TYPE
		,p_TRACKING_DATA_ITEM_ID OUT TRACKING_DATA_ITEM.TRACKING_DATA_ITEM_ID%TYPE
	)
	AS
		l_FIELD_TYPE_ID TRACKING_DATA_ITEM.FIELD_TYPE_ID%TYPE := NULL;
	BEGIN
		GetTypeId(l_FIELD_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME);
		
		INSERT INTO TRACKING_DATA_ITEM
		(
			WORKFLOW_INSTANCE_ID
			,EVENT_ID
			,EVENT_TYPE
			,FIELD_NAME
			,FIELD_TYPE_ID
			,DATA_STR
			,DATA_BLOB
			,DATA_NON_SERIALISABLE
		)
		VALUES
		(
			p_WORKFLOW_INSTANCE_ID
			,p_EVENT_ID
			,p_EVENT_TYPE
			,p_FIELD_NAME
			,l_FIELD_TYPE_ID
			,p_DATA_STR
			,p_DATA_BLOB
			,p_DATA_NON_SERIALISABLE
		)
		RETURNING TRACKING_DATA_ITEM_ID
		INTO p_TRACKING_DATA_ITEM_ID;
		
	END InsertTrackingDataItem;
	
	/*
	 * Insert a batch of tracking data item annotations
	 */
	PROCEDURE InsertTrackingDataAnnotations
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_TRACKING_DATA_ITEM_ID_1 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE
		,p_ANNOTATION_1 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE
		,p_TRACKING_DATA_ITEM_ID_2 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_2 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_3 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_3 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_4 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_4 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
		,p_TRACKING_DATA_ITEM_ID_5 IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE := NULL
		,p_ANNOTATION_5 IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE := NULL
	)
	AS
	BEGIN
		-- parameter set 1
		IF p_TRACKING_DATA_ITEM_ID_1 IS NOT NULL THEN
			InsertTrackingDataAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_TRACKING_DATA_ITEM_ID_1, p_ANNOTATION_1);
		END IF;
		
		-- parameter set 2
		IF p_TRACKING_DATA_ITEM_ID_2 IS NOT NULL THEN
			InsertTrackingDataAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_TRACKING_DATA_ITEM_ID_2, p_ANNOTATION_2);
		END IF;
		
		-- parameter set 3
		IF p_TRACKING_DATA_ITEM_ID_3 IS NOT NULL THEN
			InsertTrackingDataAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_TRACKING_DATA_ITEM_ID_3, p_ANNOTATION_3);
		END IF;
		
		-- parameter set 4
		IF p_TRACKING_DATA_ITEM_ID_4 IS NOT NULL THEN
			InsertTrackingDataAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_TRACKING_DATA_ITEM_ID_4, p_ANNOTATION_4);
		END IF;
		
		-- parameter set 5
		IF p_TRACKING_DATA_ITEM_ID_5 IS NOT NULL THEN
			InsertTrackingDataAnnotation(p_WORKFLOW_INSTANCE_ID, 
				p_TRACKING_DATA_ITEM_ID_5, p_ANNOTATION_5);
		END IF;
		
	END InsertTrackingDataAnnotations;
	
	/*
	 * Insert a single tracking data item annotation.
	 */
	PROCEDURE InsertTrackingDataAnnotation
	(
		p_WORKFLOW_INSTANCE_ID IN WORKFLOW_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_TRACKING_DATA_ITEM_ID IN TRACKING_DATA_ITEM_ANNOTATION.TRACKING_DATA_ITEM_ID%TYPE
		,p_ANNOTATION IN TRACKING_DATA_ITEM_ANNOTATION.ANNOTATION%TYPE
	)
	AS
	BEGIN
		INSERT INTO TRACKING_DATA_ITEM_ANNOTATION
		(
			TRACKING_DATA_ITEM_ID
			,WORKFLOW_INSTANCE_ID
			,ANNOTATION
		)
		VALUES
		(
			p_TRACKING_DATA_ITEM_ID
			,p_WORKFLOW_INSTANCE_ID
			,p_ANNOTATION
		);
	END InsertTrackingDataAnnotation;
	
	/*
	 * Retrieve the unique identifier of a type, creating a new one
	 * if necessary.
	 */	
	PROCEDURE GetTypeId
	(
		p_TYPE_ID OUT TYPE.TYPE_ID%TYPE
		,p_TYPE_FULL_NAME IN TYPE.TYPE_FULL_NAME%TYPE
		,p_ASSEMBLY_FULL_NAME IN TYPE.ASSEMBLY_FULL_NAME%TYPE
		,p_IS_INSTANCE_TYPE IN TYPE.IS_INSTANCE_TYPE%TYPE := 0
	)
	AS
		l_TYPE_ID NUMBER(18);
	BEGIN
		SELECT
			TYPE_ID
		INTO
			p_TYPE_ID
		FROM
			TYPE
		WHERE
			TYPE_FULL_NAME = p_TYPE_FULL_NAME
			AND ASSEMBLY_FULL_NAME = p_ASSEMBLY_FULL_NAME;
		
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				INSERT INTO TYPE
				(
					TYPE_FULL_NAME
					,ASSEMBLY_FULL_NAME
					,IS_INSTANCE_TYPE
				)
				VALUES
				(
					p_TYPE_FULL_NAME
					,p_ASSEMBLY_FULL_NAME
					,p_IS_INSTANCE_TYPE
				)
				RETURNING TYPE_ID INTO p_TYPE_ID;
				
			WHEN OTHERS THEN
				RAISE;
		
	END GetTypeId;
	
	/*
	 * Retrieve the unique identifier of an activity instance, creating a new one
	 * if necessary.
	 */
	PROCEDURE GetActivityInstanceId
	(
		p_WORKFLOW_INSTANCE_ID IN ACTIVITY_INSTANCE.WORKFLOW_INSTANCE_ID%TYPE
		,p_QUALIFIED_NAME IN ACTIVITY_INSTANCE.QUALIFIED_NAME%TYPE
		,p_CONTEXT_GUID IN ACTIVITY_INSTANCE.CONTEXT_GUID%TYPE
		,p_PARENT_CONTEXT_GUID IN ACTIVITY_INSTANCE.PARENT_CONTEXT_GUID%TYPE
		,p_ACTIVITY_INSTANCE_ID OUT ACTIVITY_INSTANCE.ACTIVITY_INSTANCE_ID%TYPE
	)
	AS
		l_WORKFLOW_INSTANCE_EVENT_ID ACTIVITY_INSTANCE.WORKFLOW_INSTANCE_EVENT_ID%TYPE := NULL;
	BEGIN
		SELECT
			ACTIVITY_INSTANCE_ID
		INTO
			p_ACTIVITY_INSTANCE_ID
		FROM
			ACTIVITY_INSTANCE
		WHERE
			WORKFLOW_INSTANCE_ID = p_WORKFLOW_INSTANCE_ID
			AND QUALIFIED_NAME = p_QUALIFIED_NAME
			AND CONTEXT_GUID = p_CONTEXT_GUID
			AND PARENT_CONTEXT_GUID = p_PARENT_CONTEXT_GUID;
		
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				-- if a record exists in ADDED_ACTIVITY for this qualified name
				-- then use the workflow event id when inserting this record
				SELECT
					MAX(WORKFLOW_INSTANCE_EVENT_ID)
				INTO
					l_WORKFLOW_INSTANCE_EVENT_ID
				FROM
					ADDED_ACTIVITY
				WHERE
					QUALIFIED_NAME = p_QUALIFIED_NAME;
					
				INSERT INTO ACTIVITY_INSTANCE
				(
					WORKFLOW_INSTANCE_ID
					,QUALIFIED_NAME
					,CONTEXT_GUID
					,PARENT_CONTEXT_GUID
					,WORKFLOW_INSTANCE_EVENT_ID
				)
				VALUES
				(
					p_WORKFLOW_INSTANCE_ID
					,p_QUALIFIED_NAME
					,p_CONTEXT_GUID
					,p_PARENT_CONTEXT_GUID
					,l_WORKFLOW_INSTANCE_EVENT_ID
				)
				RETURNING ACTIVITY_INSTANCE_ID INTO p_ACTIVITY_INSTANCE_ID;
				
			WHEN OTHERS THEN
				RAISE;
	END;
	
END WORKFLOW_TRACKING_PKG;
/
