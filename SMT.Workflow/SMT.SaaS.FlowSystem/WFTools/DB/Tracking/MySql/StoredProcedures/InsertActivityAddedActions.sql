DELIMITER $$

DROP PROCEDURE IF EXISTS InsertActivityAddedActions $$
/*
 * Insert a batch of activity added actions.
 */	
CREATE PROCEDURE InsertActivityAddedActions
(
	IN p_WORKFLOW_INSTANCE_ID BIGINT UNSIGNED
	,IN p_WORKFLOW_INSTANCE_EVENT_ID_1 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_1 VARCHAR(128)
	,IN p_TYPE_FULL_NAME_1 VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME_1 VARCHAR(256)
	,IN p_PARENT_QUALIFIED_NAME_1 VARCHAR(128)
	,IN p_ADDED_ACTIVITY_ACTION_1 VARCHAR(2000)
	,IN p_ORDER_1 INT UNSIGNED
	,IN p_WORKFLOW_INSTANCE_EVENT_ID_2 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_2 VARCHAR(128)
	,IN p_TYPE_FULL_NAME_2 VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME_2 VARCHAR(256)
	,IN p_PARENT_QUALIFIED_NAME_2 VARCHAR(128)
	,IN p_ADDED_ACTIVITY_ACTION_2 VARCHAR(2000)
	,IN p_ORDER_2 INT UNSIGNED
	,IN p_WORKFLOW_INSTANCE_EVENT_ID_3 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_3 VARCHAR(128)
	,IN p_TYPE_FULL_NAME_3 VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME_3 VARCHAR(256)
	,IN p_PARENT_QUALIFIED_NAME_3 VARCHAR(128)
	,IN p_ADDED_ACTIVITY_ACTION_3 VARCHAR(2000)
	,IN p_ORDER_3 INT UNSIGNED
	,IN p_WORKFLOW_INSTANCE_EVENT_ID_4 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_4 VARCHAR(128)
	,IN p_TYPE_FULL_NAME_4 VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME_4 VARCHAR(256)
	,IN p_PARENT_QUALIFIED_NAME_4 VARCHAR(128)
	,IN p_ADDED_ACTIVITY_ACTION_4 VARCHAR(2000)
	,IN p_ORDER_4 INT UNSIGNED
	,IN p_WORKFLOW_INSTANCE_EVENT_ID_5 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_5 VARCHAR(128)
	,IN p_TYPE_FULL_NAME_5 VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME_5 VARCHAR(256)
	,IN p_PARENT_QUALIFIED_NAME_5 VARCHAR(128)
	,IN p_ADDED_ACTIVITY_ACTION_5 VARCHAR(2000)
	,IN p_ORDER_5 INT UNSIGNED
)
sproc:BEGIN
	-- parameter set 1
	CALL InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID,
		p_WORKFLOW_INSTANCE_EVENT_ID_1, p_QUALIFIED_NAME_1, 
		p_TYPE_FULL_NAME_1, p_ASSEMBLY_FULL_NAME_1, 
		p_PARENT_QUALIFIED_NAME_1, p_ADDED_ACTIVITY_ACTION_1, 
		p_ORDER_1);
		
	-- parameter set 2
	IF p_WORKFLOW_INSTANCE_EVENT_ID_2 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	CALL InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID,
		p_WORKFLOW_INSTANCE_EVENT_ID_2, p_QUALIFIED_NAME_2, 
		p_TYPE_FULL_NAME_2, p_ASSEMBLY_FULL_NAME_2, 
		p_PARENT_QUALIFIED_NAME_2, p_ADDED_ACTIVITY_ACTION_2, 
		p_ORDER_2);

	-- parameter set 3
	IF p_WORKFLOW_INSTANCE_EVENT_ID_3 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	CALL InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID,
		p_WORKFLOW_INSTANCE_EVENT_ID_3, p_QUALIFIED_NAME_3, 
		p_TYPE_FULL_NAME_3, p_ASSEMBLY_FULL_NAME_3, 
		p_PARENT_QUALIFIED_NAME_3, p_ADDED_ACTIVITY_ACTION_3, 
		p_ORDER_3);
		
	-- parameter set 4
	IF p_WORKFLOW_INSTANCE_EVENT_ID_4 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	CALL InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID,
		p_WORKFLOW_INSTANCE_EVENT_ID_4, p_QUALIFIED_NAME_4, 
		p_TYPE_FULL_NAME_4, p_ASSEMBLY_FULL_NAME_4, 
		p_PARENT_QUALIFIED_NAME_4, p_ADDED_ACTIVITY_ACTION_4, 
		p_ORDER_4);
	
	-- parameter set 5
	IF p_WORKFLOW_INSTANCE_EVENT_ID_5 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	CALL InsertActivityAddedAction(p_WORKFLOW_INSTANCE_ID,
		p_WORKFLOW_INSTANCE_EVENT_ID_5, p_QUALIFIED_NAME_5, 
		p_TYPE_FULL_NAME_5, p_ASSEMBLY_FULL_NAME_5, 
		p_PARENT_QUALIFIED_NAME_5, p_ADDED_ACTIVITY_ACTION_5, 
		p_ORDER_5);
	
END $$

DELIMITER ;
