DELIMITER $$

DROP PROCEDURE IF EXISTS InsertActivities $$
/*
 * Insert activities associated with a workflow.
 */
CREATE PROCEDURE InsertActivities
(
	IN p_WORKFLOW_TYPE_ID BIGINT UNSIGNED
	,IN p_ACTIVITY_XML LONGTEXT
)
BEGIN
	DECLARE l_ACTIVITY_COUNT INT UNSIGNED;
	DECLARE l_ACTIVITY_INDEX INT UNSIGNED;
	DECLARE l_QUALIFIED_NAME VARCHAR(128);
	DECLARE l_TYPE_FULL_NAME VARCHAR(128);
	DECLARE l_ASSEMBLY_FULL_NAME VARCHAR(256);
	DECLARE l_PARENT_QUALIFIED_NAME VARCHAR(128);
	DECLARE l_ACTIVITY_TYPE_ID BIGINT UNSIGNED;

	SELECT EXTRACTVALUE(p_ACTIVITY_XML, 'COUNT(/Activities/Activity)') INTO l_ACTIVITY_COUNT;
	
	SET l_ACTIVITY_INDEX = 1;
	
	parseLoop:LOOP
		IF l_ACTIVITY_INDEX > l_ACTIVITY_COUNT THEN
			LEAVE parseLoop;
		END IF;

		SELECT EXTRACTVALUE(p_ACTIVITY_XML, CONCAT('/Activities/Activity[', l_ACTIVITY_INDEX, ']/QualifiedName')) INTO l_QUALIFIED_NAME;

		IF LENGTH(l_QUALIFIED_NAME) = 0 THEN
			LEAVE parseLoop;
		END IF;
		
		SELECT EXTRACTVALUE(p_ACTIVITY_XML, CONCAT('/Activities/Activity[', l_ACTIVITY_INDEX, ']/TypeFullName')) INTO l_TYPE_FULL_NAME;
		SELECT EXTRACTVALUE(p_ACTIVITY_XML, CONCAT('/Activities/Activity[', l_ACTIVITY_INDEX, ']/AssemblyFullName')) INTO l_ASSEMBLY_FULL_NAME;
		SELECT EXTRACTVALUE(p_ACTIVITY_XML, CONCAT('/Activities/Activity[', l_ACTIVITY_INDEX, ']/ParentQualifiedName')) INTO l_PARENT_QUALIFIED_NAME;

		IF LENGTH(l_PARENT_QUALIFIED_NAME) = 0 THEN
			SET l_PARENT_QUALIFIED_NAME = NULL;
		END IF;
				
		CALL GetTypeId(l_ACTIVITY_TYPE_ID, l_TYPE_FULL_NAME, l_ASSEMBLY_FULL_NAME, NULL);
		
		INSERT INTO ACTIVITY
		(
			WORKFLOW_TYPE_ID
			,QUALIFIED_NAME
			,ACTIVITY_TYPE_ID
			,PARENT_QUALIFIED_NAME
		)
		VALUES
		(
			p_WORKFLOW_TYPE_ID
			,l_QUALIFIED_NAME
			,l_ACTIVITY_TYPE_ID
			,l_PARENT_QUALIFIED_NAME
		);
		
		SET l_ACTIVITY_INDEX = l_ACTIVITY_INDEX + 1;
		
	END LOOP;
END $$

DELIMITER ;
