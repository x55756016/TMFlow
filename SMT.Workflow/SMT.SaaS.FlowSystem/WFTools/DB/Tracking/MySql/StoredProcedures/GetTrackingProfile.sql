DELIMITER $$

DROP PROCEDURE IF EXISTS GetTrackingProfile $$
/*
 * Retrieve a particular version of the tracking profile for a workflow type.
 */	
CREATE PROCEDURE GetTrackingProfile
(
	IN p_TYPE_FULL_NAME VARCHAR(128)
	,IN p_ASSEMBLY_FULL_NAME VARCHAR(256)
	,IN p_VERSION VARCHAR(32)
	,IN p_CREATE_DEFAULT BOOLEAN
)
BEGIN
	DECLARE l_TYPE_ID BIGINT UNSIGNED;
	
	IF p_CREATE_DEFAULT = TRUE THEN
		-- does a tracking profile exist for the specified type/assembly
		IF NOT EXISTS (
			SELECT
				NULL
			FROM
				TRACKING_PROFILE TP
				INNER JOIN TYPE T ON TP.WORKFLOW_TYPE_ID = T.TYPE_ID
			WHERE
				T.TYPE_FULL_NAME = p_TYPE_FULL_NAME
				AND T.ASSEMBLY_FULL_NAME = p_ASSEMBLY_FULL_NAME
			)
		THEN
			-- tracking profile doesn't exist, create from default
			CALL GetTypeId(l_TYPE_ID, p_TYPE_FULL_NAME, p_ASSEMBLY_FULL_NAME, NULL);
			
			INSERT INTO TRACKING_PROFILE
			(
				VERSION
				,WORKFLOW_TYPE_ID
				,TRACKING_PROFILE_XML
				,INSERT_DATE_TIME
			)
			SELECT
				VERSION
				,l_TYPE_ID
				,NULL
				,UTC_TIMESTAMP()
			FROM
				DEFAULT_TRACKING_PROFILE
			ORDER BY
				INSERT_DATE_TIME DESC
			LIMIT 1;
			
		END IF;
	END IF;

	SELECT
		IFNULL(TP.TRACKING_PROFILE_XML, DTP.TRACKING_PROFILE_XML) TRACKING_PROFILE_XML
		,TP.VERSION
	FROM
		TRACKING_PROFILE TP
		INNER JOIN TYPE T 
			ON TP.WORKFLOW_TYPE_ID = T.TYPE_ID
		LEFT OUTER JOIN DEFAULT_TRACKING_PROFILE DTP 
			ON TP.VERSION = DTP.VERSION
	WHERE
		T.TYPE_FULL_NAME = p_TYPE_FULL_NAME
		AND T.ASSEMBLY_FULL_NAME = p_ASSEMBLY_FULL_NAME
		AND TP.VERSION != '-1'
		AND TP.VERSION = IFNULL(p_VERSION, TP.VERSION)
	ORDER BY
		TP.INSERT_DATE_TIME DESC
	LIMIT 1;
	
END $$

DELIMITER ;