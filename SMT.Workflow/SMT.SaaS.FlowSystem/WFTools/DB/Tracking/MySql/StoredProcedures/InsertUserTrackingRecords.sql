DELIMITER $$

DROP PROCEDURE IF EXISTS InsertUserTrackingRecords $$
/*
 * Insert a batch of user tracking records.
 */	
CREATE PROCEDURE InsertUserTrackingRecords
(
	IN p_WORKFLOW_INSTANCE_ID BIGINT UNSIGNED
	,INOUT p_ACTIVITY_INSTANCE_ID_1 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_1 VARCHAR(128)
	,IN p_CONTEXT_GUID_1 CHAR(36)
	,IN p_PARENT_CONTEXT_GUID_1 CHAR(36)
	,IN p_EVENT_DATE_TIME_1 DATETIME
	,IN p_EVENT_ORDER_1 INT UNSIGNED
	,IN p_USER_DATA_KEY_1 VARCHAR(512)
	,IN p_USER_DATA_TYPE_NAME_1 VARCHAR(128)
	,IN p_USER_DATA_ASSEMBLY_NAME_1 VARCHAR(256)
	,IN p_USER_DATA_STR_1 LONGTEXT
	,IN p_USER_DATA_BLOB_1 BLOB
	,IN p_USER_DATA_NON_SERIALISABLE_1 BOOLEAN
	,OUT p_USER_EVENT_ID_1 BIGINT UNSIGNED
	,INOUT p_ACTIVITY_INSTANCE_ID_2 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_2 VARCHAR(128)
	,IN p_CONTEXT_GUID_2 CHAR(36)
	,IN p_PARENT_CONTEXT_GUID_2 CHAR(36)
	,IN p_EVENT_DATE_TIME_2 DATETIME
	,IN p_EVENT_ORDER_2 INT UNSIGNED
	,IN p_USER_DATA_KEY_2 VARCHAR(512)
	,IN p_USER_DATA_TYPE_NAME_2 VARCHAR(128)
	,IN p_USER_DATA_ASSEMBLY_NAME_2 VARCHAR(256)
	,IN p_USER_DATA_STR_2 LONGTEXT
	,IN p_USER_DATA_BLOB_2 BLOB
	,IN p_USER_DATA_NON_SERIALISABLE_2 BOOLEAN
	,OUT p_USER_EVENT_ID_2 BIGINT UNSIGNED
	,INOUT p_ACTIVITY_INSTANCE_ID_3 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_3 VARCHAR(128)
	,IN p_CONTEXT_GUID_3 CHAR(36)
	,IN p_PARENT_CONTEXT_GUID_3 CHAR(36)
	,IN p_EVENT_DATE_TIME_3 DATETIME
	,IN p_EVENT_ORDER_3 INT UNSIGNED
	,IN p_USER_DATA_KEY_3 VARCHAR(512)
	,IN p_USER_DATA_TYPE_NAME_3 VARCHAR(128)
	,IN p_USER_DATA_ASSEMBLY_NAME_3 VARCHAR(256)
	,IN p_USER_DATA_STR_3 LONGTEXT
	,IN p_USER_DATA_BLOB_3 BLOB
	,IN p_USER_DATA_NON_SERIALISABLE_3 BOOLEAN
	,OUT p_USER_EVENT_ID_3 BIGINT UNSIGNED
	,INOUT p_ACTIVITY_INSTANCE_ID_4 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_4 VARCHAR(128)
	,IN p_CONTEXT_GUID_4 CHAR(36)
	,IN p_PARENT_CONTEXT_GUID_4 CHAR(36)
	,IN p_EVENT_DATE_TIME_4 DATETIME
	,IN p_EVENT_ORDER_4 INT UNSIGNED
	,IN p_USER_DATA_KEY_4 VARCHAR(512)
	,IN p_USER_DATA_TYPE_NAME_4 VARCHAR(128)
	,IN p_USER_DATA_ASSEMBLY_NAME_4 VARCHAR(256)
	,IN p_USER_DATA_STR_4 LONGTEXT
	,IN p_USER_DATA_BLOB_4 BLOB
	,IN p_USER_DATA_NON_SERIALISABLE_4 BOOLEAN
	,OUT p_USER_EVENT_ID_4 BIGINT UNSIGNED
	,INOUT p_ACTIVITY_INSTANCE_ID_5 BIGINT UNSIGNED
	,IN p_QUALIFIED_NAME_5 VARCHAR(128)
	,IN p_CONTEXT_GUID_5 CHAR(36)
	,IN p_PARENT_CONTEXT_GUID_5 CHAR(36)
	,IN p_EVENT_DATE_TIME_5 DATETIME
	,IN p_EVENT_ORDER_5 INT UNSIGNED
	,IN p_USER_DATA_KEY_5 VARCHAR(512)
	,IN p_USER_DATA_TYPE_NAME_5 VARCHAR(128)
	,IN p_USER_DATA_ASSEMBLY_NAME_5 VARCHAR(256)
	,IN p_USER_DATA_STR_5 LONGTEXT
	,IN p_USER_DATA_BLOB_5 BLOB
	,IN p_USER_DATA_NON_SERIALISABLE_5 BOOLEAN
	,OUT p_USER_EVENT_ID_5 BIGINT UNSIGNED
)
sproc:BEGIN
	-- parameter set 1
	CALL InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
		p_ACTIVITY_INSTANCE_ID_1, p_QUALIFIED_NAME_1, 
		p_CONTEXT_GUID_1, p_PARENT_CONTEXT_GUID_1, 
		p_EVENT_DATE_TIME_1, p_EVENT_ORDER_1, p_USER_DATA_KEY_1, 
		p_USER_DATA_TYPE_NAME_1, p_USER_DATA_ASSEMBLY_NAME_1, 
		p_USER_DATA_STR_1, p_USER_DATA_BLOB_1, 
		p_USER_DATA_NON_SERIALISABLE_1, p_USER_EVENT_ID_1);
		
	-- parameter set 2
	IF p_QUALIFIED_NAME_2 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	IF p_QUALIFIED_NAME_2 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_2 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_2 = p_PARENT_CONTEXT_GUID_1 THEN
		SET p_ACTIVITY_INSTANCE_ID_2 = p_ACTIVITY_INSTANCE_ID_1;
	END IF;
	
	CALL InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
		p_ACTIVITY_INSTANCE_ID_2, p_QUALIFIED_NAME_2, 
		p_CONTEXT_GUID_2, p_PARENT_CONTEXT_GUID_2, 
		p_EVENT_DATE_TIME_2, p_EVENT_ORDER_2, p_USER_DATA_KEY_2, 
		p_USER_DATA_TYPE_NAME_2, p_USER_DATA_ASSEMBLY_NAME_2, 
		p_USER_DATA_STR_2, p_USER_DATA_BLOB_2, 
		p_USER_DATA_NON_SERIALISABLE_2, p_USER_EVENT_ID_2);
		
	-- parameter set 3
	IF p_QUALIFIED_NAME_3 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	IF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_1 THEN
		SET p_ACTIVITY_INSTANCE_ID_3 = p_ACTIVITY_INSTANCE_ID_1;
	ELSEIF p_QUALIFIED_NAME_3 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_3 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_3 = p_PARENT_CONTEXT_GUID_2 THEN
		SET p_ACTIVITY_INSTANCE_ID_3 = p_ACTIVITY_INSTANCE_ID_2;
	END IF;
	
	CALL InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
		p_ACTIVITY_INSTANCE_ID_3, p_QUALIFIED_NAME_3, 
		p_CONTEXT_GUID_3, p_PARENT_CONTEXT_GUID_3, 
		p_EVENT_DATE_TIME_3, p_EVENT_ORDER_3, p_USER_DATA_KEY_3, 
		p_USER_DATA_TYPE_NAME_3, p_USER_DATA_ASSEMBLY_NAME_3, 
		p_USER_DATA_STR_3, p_USER_DATA_BLOB_3, 
		p_USER_DATA_NON_SERIALISABLE_3, p_USER_EVENT_ID_3);
		
	-- parameter set 4
	IF p_QUALIFIED_NAME_4 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	IF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_1 THEN
		SET p_ACTIVITY_INSTANCE_ID_4 = p_ACTIVITY_INSTANCE_ID_1;
	ELSEIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_2 THEN
		SET p_ACTIVITY_INSTANCE_ID_4 = p_ACTIVITY_INSTANCE_ID_2;
	ELSEIF p_QUALIFIED_NAME_4 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_4 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_4 = p_PARENT_CONTEXT_GUID_3 THEN
		SET p_ACTIVITY_INSTANCE_ID_4 = p_ACTIVITY_INSTANCE_ID_3;
	END IF;
	
	CALL InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
		p_ACTIVITY_INSTANCE_ID_4, p_QUALIFIED_NAME_4, 
		p_CONTEXT_GUID_4, p_PARENT_CONTEXT_GUID_4, 
		p_EVENT_DATE_TIME_4, p_EVENT_ORDER_4, p_USER_DATA_KEY_4, 
		p_USER_DATA_TYPE_NAME_4, p_USER_DATA_ASSEMBLY_NAME_4, 
		p_USER_DATA_STR_4, p_USER_DATA_BLOB_4, 
		p_USER_DATA_NON_SERIALISABLE_4, p_USER_EVENT_ID_4);
		
	-- parameter set 5
	IF p_QUALIFIED_NAME_5 IS NULL THEN
		LEAVE sproc;
	END IF;
	
	IF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_1 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_1 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_1 THEN
		SET p_ACTIVITY_INSTANCE_ID_5 = p_ACTIVITY_INSTANCE_ID_1;
	ELSEIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_2 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_2 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_2 THEN
		SET p_ACTIVITY_INSTANCE_ID_5 = p_ACTIVITY_INSTANCE_ID_2;
	ELSEIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_3 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_3 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_3 THEN
		SET p_ACTIVITY_INSTANCE_ID_5 = p_ACTIVITY_INSTANCE_ID_3;
	ELSEIF p_QUALIFIED_NAME_5 = p_QUALIFIED_NAME_4 AND p_CONTEXT_GUID_5 = p_CONTEXT_GUID_4 AND p_PARENT_CONTEXT_GUID_5 = p_PARENT_CONTEXT_GUID_4 THEN
		SET p_ACTIVITY_INSTANCE_ID_5 = p_ACTIVITY_INSTANCE_ID_4;
	END IF;
	
	CALL InsertUserTrackingRecord(p_WORKFLOW_INSTANCE_ID, 
		p_ACTIVITY_INSTANCE_ID_5, p_QUALIFIED_NAME_5, 
		p_CONTEXT_GUID_5, p_PARENT_CONTEXT_GUID_5, 
		p_EVENT_DATE_TIME_5, p_EVENT_ORDER_5, p_USER_DATA_KEY_5, 
		p_USER_DATA_TYPE_NAME_5, p_USER_DATA_ASSEMBLY_NAME_5, 
		p_USER_DATA_STR_5, p_USER_DATA_BLOB_5, 
		p_USER_DATA_NON_SERIALISABLE_5, p_USER_EVENT_ID_5);
END $$

DELIMITER ;
